{"ast":null,"code":"var _jsxFileName = \"/home/yawcz/Documents/web/ne-game-code/src/components/Screen.js\",\n  _s = $RefreshSig$();\nimport { Button, Heading, SimpleGrid, Text, FormControl, Input, FormErrorMessage } from '@chakra-ui/react';\nimport { useEffect } from 'react';\nimport plot from '../plot.json';\nimport { Field, Form, Formik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Screen(_ref) {\n  _s();\n  let {\n    currentScreen,\n    onUpdateScreen\n  } = _ref;\n  const {\n    choices,\n    heading,\n    text,\n    correctAnswer,\n    screenTo\n  } = plot[currentScreen];\n  const onChoiceClicked = choice => {\n    onUpdateScreen(choice.screenTo);\n  };\n  useEffect(() => {\n    // change background image on component mount\n    document.body.style.setProperty('background-image', 'url(\"https://www.shutterstock.com/image-photo/robin-erithacus-rubecula-isolated-on-260nw-742894039.jpg\")', 'important');\n    return () => {\n      document.body.style.setProperty('background-image', '');\n    };\n  }, []);\n  const validateName = userAnswer => {\n    // please don't read code >:(\n    let error;\n    if (!userAnswer) {\n      error = 'An answer is required';\n    } else if (userAnswer.trim().toLowerCase() !== correctAnswer.trim().toLowerCase()) {\n      error = 'Wrong answer! ðŸ˜±';\n    }\n    return error;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      my: \"5\",\n      children: heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      my: \"5\",\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), choices && /*#__PURE__*/_jsxDEV(SimpleGrid, {\n      my: \"5\",\n      w: \"100%\",\n      columns: {\n        sm: 1,\n        md: 2\n      },\n      gap: 6,\n      children: choices.map((choice, index) => /*#__PURE__*/_jsxDEV(Button, {\n        whiteSpace: \"normal\",\n        height: \"auto\",\n        blockSize: \"auto\",\n        py: \"5\",\n        w: \"100%\",\n        h: \"100%\",\n        colorScheme: \"blue\",\n        onClick: () => onChoiceClicked(choice),\n        children: choice.label\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), correctAnswer && /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        answer: ''\n      },\n      onSubmit: () => onUpdateScreen(screenTo),\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"answer\",\n          validate: validateName,\n          my: \"5\",\n          children: _ref2 => {\n            let {\n              field,\n              form\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(FormControl, {\n              isInvalid: form.errors.answer && form.touched.answer,\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                ...field,\n                placeholder: \"Your answer\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormErrorMessage, {\n                mt: \"1\",\n                children: form.errors.answer\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          my: \"6\",\n          colorScheme: \"blue\",\n          type: \"submit\",\n          w: \"100%\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Screen, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = Screen;\nexport default Screen;\nvar _c;\n$RefreshReg$(_c, \"Screen\");","map":{"version":3,"names":["Button","Heading","SimpleGrid","Text","FormControl","Input","FormErrorMessage","useEffect","plot","Field","Form","Formik","Screen","currentScreen","onUpdateScreen","choices","heading","text","correctAnswer","screenTo","onChoiceClicked","choice","document","body","style","setProperty","validateName","userAnswer","error","trim","toLowerCase","sm","md","map","index","label","answer","field","form","errors","touched"],"sources":["/home/yawcz/Documents/web/ne-game-code/src/components/Screen.js"],"sourcesContent":["import { Button, Heading, SimpleGrid, Text, FormControl, Input, FormErrorMessage } from '@chakra-ui/react';\nimport { useEffect } from 'react';\nimport plot from '../plot.json';\n\nimport { Field, Form, Formik } from 'formik';\n\nfunction Screen({ currentScreen, onUpdateScreen }) {\n  const { choices, heading, text, correctAnswer, screenTo } = plot[currentScreen];\n\n  const onChoiceClicked = (choice) => {\n    onUpdateScreen(choice.screenTo);\n  };\n\n  useEffect(() => {\n    // change background image on component mount\n    document.body.style.setProperty('background-image', 'url(\"https://www.shutterstock.com/image-photo/robin-erithacus-rubecula-isolated-on-260nw-742894039.jpg\")', 'important');\n    return () => {\n      document.body.style.setProperty('background-image', '');\n    };\n  }, []);\n\n  const validateName = (userAnswer) => {\n    // please don't read code >:(\n    let error;\n    if (!userAnswer) {\n      error = 'An answer is required';\n    } else if (userAnswer.trim().toLowerCase() !== correctAnswer.trim().toLowerCase()) {\n      error = 'Wrong answer! ðŸ˜±';\n    }\n    return error;\n  };\n  \n  return (\n    <>\n      <Heading my='5'>{heading}</Heading>\n      <Text my='5'>{text}</Text>\n      {\n        choices &&\n        <SimpleGrid my='5' w='100%' columns={{sm: 1, md: 2}} gap={6}>\n          {\n            choices.map((choice, index) => (\n              <Button\n                key={index}\n                whiteSpace='normal'\n                height='auto'\n                blockSize='auto'\n                py='5'\n                w='100%'\n                h='100%'\n                colorScheme='blue'\n                onClick={() => onChoiceClicked(choice)}\n              >{choice.label}</Button>\n            ))\n          }\n        </SimpleGrid>\n      }\n      {\n        correctAnswer && \n        <Formik\n          initialValues={{ answer: '' }}\n          onSubmit={() => onUpdateScreen(screenTo)}\n        >\n          <Form>\n            <Field name='answer' validate={validateName} my='5'>\n              {({ field, form }) => (\n                <FormControl isInvalid={form.errors.answer && form.touched.answer}>\n                  <Input {...field} placeholder='Your answer' />\n                  <FormErrorMessage mt='1'>{form.errors.answer}</FormErrorMessage>\n                </FormControl>\n              )}\n            </Field>\n            <Button\n              my='6'\n              colorScheme='blue'\n              type='submit'\n              w='100%'\n            >\n              Submit\n            </Button>\n          </Form>\n        </Formik>\n      }\n    </>\n  );\n}\n\nexport default Screen;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}